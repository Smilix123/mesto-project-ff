{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["export function openModal(modal) {\r\n  modal.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", handleEscClose);\r\n}\r\n\r\nexport function closeModal(modal) {\r\n  modal.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", handleEscClose);\r\n}\r\n\r\nfunction handleEscClose(e) {\r\n  if (e.key === \"Escape\") {\r\n    const modal = document.querySelector(\".popup_is-opened\");\r\n    if (modal) {\r\n      closeModal(modal);\r\n    }\r\n  }\r\n}","const cardTemplate = document.querySelector(\"#card-template\").content;\r\n\r\nfunction createCard({ cardData, onDelete, onLike, onImageClick }) {\r\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\r\n  const cardImage = cardElement.querySelector(\".card__image\");\r\n  const cardTitle = cardElement.querySelector(\".card__title\");\r\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\r\n  const likeButton = cardElement.querySelector(\".card__like-button\");\r\n\r\n  const likesCount = cardElement.querySelector(\".card__like-count\");\r\n\r\n  cardImage.src = cardData.link;\r\n  cardImage.alt = cardData.name;\r\n  cardTitle.textContent = cardData.name;\r\n  likesCount.textContent = cardData.likes.length;\r\n\r\n  likeButton.addEventListener(\"click\", () => onLike(likeButton, cardData.id, likesCount));\r\n  cardImage.addEventListener(\"click\", () => onImageClick(cardImage, cardTitle));\r\n\r\n  const userHasLike = cardData.likes.some((like) => {\r\n    return like._id === cardData.userId;\r\n  });\r\n\r\n  if (userHasLike) {\r\n    likeButton.classList.add(\"card__like-button_is-active\");\r\n  }\r\n\r\n  if (cardData.ownerId !== cardData.userId) {\r\n    deleteButton.remove();\r\n  } else {\r\n    deleteButton.addEventListener(\"click\", () => onDelete(cardElement, cardData.id));\r\n  }\r\n  return cardElement;\r\n}\r\n\r\nexport { createCard };\r\n","export { clearValidation, enableValidation };\r\n\r\nconst showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = \"\";\r\n};\r\n\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n};\r\n\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  toggleButtonState(formElement, validationConfig);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", function (e) {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      toggleButtonState(formElement, validationConfig);\r\n    });\r\n  });\r\n};\r\n\r\nconst enableValidation = (validationConfig) => {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener(\"submit\", function (evt) {\r\n      evt.preventDefault();\r\n    });\r\n    const fieldsetList = Array.from(formElement.querySelectorAll(\".popup__form_set\"));\r\n    fieldsetList.forEach((fieldSet) => {\r\n      setEventListeners(fieldSet, validationConfig);\r\n    });\r\n  });\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\nconst toggleButtonState = (fieldset, validationConfig) => {\r\n  const inputList = Array.from(fieldset.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = fieldset.querySelector(validationConfig.submitButtonSelector);\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n    buttonElement.disabled = true;\r\n  } else {\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n    buttonElement.disabled = false;\r\n  }\r\n};\r\n\r\nconst clearValidation = (modal, validationConfig) => {\r\n  const fieldset = modal.querySelector(\".popup__form_set\");\r\n  const inputList = Array.from(modal.querySelectorAll(validationConfig.inputSelector));\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(fieldset, inputElement, validationConfig);\r\n    inputElement.setCustomValidity(\"\");\r\n  });\r\n  toggleButtonState(fieldset, validationConfig);\r\n};\r\n","const config = {\r\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-41\",\r\n  headers: {\r\n    authorization: \"143f916c-f045-4e3b-8db8-22feba489e0e\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nexport const getUserDataApi = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n};\r\n\r\nexport const getCardsApi = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n};\r\n\r\nconst getResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка ${res.status}`);\r\n};\r\n\r\nexport const editUserDataApi = (name, about) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({ name, about }),\r\n  }).then(getResponse);\r\n};\r\n\r\nexport const updateAvatarApi = (avatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({ avatar }),\r\n  }).then(getResponse);\r\n};\r\n\r\nexport const addNewCardApi = (name, link) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({ name, link }),\r\n  }).then(getResponse);\r\n};\r\n\r\nexport const setLikeApi = (cardId, isLiked) => {\r\n  const method = isLiked ? \"DELETE\" : \"PUT\";\r\n\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method,\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n};\r\n\r\nexport const deleteCardApi = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n};\r\n","import \"./pages/index.css\";\r\n\r\nimport { openModal, closeModal } from \"./components/modal\";\r\nimport { createCard } from \"./components/card\";\r\nimport { clearValidation, enableValidation } from \"./components/validation\";\r\nimport {\r\n  getUserDataApi,\r\n  updateAvatarApi,\r\n  addNewCardApi,\r\n  getCardsApi,\r\n  editUserDataApi,\r\n  deleteCardApi,\r\n  setLikeApi,\r\n} from \"./components/api\";\r\n\r\nconst container = document.querySelector(\".content\");\r\nconst cardsContainer = container.querySelector(\".places__list\");\r\nconst profileEditButton = document.querySelector(\".profile__edit-button\");\r\n\r\nconst deleteModal = document.querySelector(\".popup_type_delete\");\r\nconst deleteForm = document.forms[\"confirm-delete-card\"];\r\n\r\nconst profileAddButton = document.querySelector(\".profile__add-button\");\r\nconst profileAddModal = document.querySelector(\".popup_type_new-card\");\r\nconst profileTitle = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\nconst profileEditModal = document.querySelector(\".popup_type_edit\");\r\nconst profileEditForm = document.forms[\"edit-profile\"];\r\nconst profileAddForm = document.forms[\"new-place\"];\r\nconst nameInput = profileEditForm.querySelector(\".popup__input_type_name\");\r\nconst descriptionInput = profileEditForm.querySelector(\".popup__input_type_description\");\r\nconst titleInput = profileAddForm.querySelector(\".popup__input_type_card-name\");\r\nconst urlInput = profileAddForm.querySelector(\".popup__input_type_url\");\r\nconst modalArray = document.querySelectorAll(\".popup\");\r\n\r\nconst avatarEditModal = document.querySelector(\".popup_type_avatar\");\r\nconst avatarEditInput = avatarEditModal.querySelector(\".popup__input_type_avatar\");\r\nconst avatarEditForm = document.forms[\"edit-avatar\"];\r\nconst profileAvatar = document.querySelector(\".profile__image\");\r\nlet currentUserId = null;\r\n\r\nconst validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n\r\nfunction fillForm(inputsArray, dataArray) {\r\n  inputsArray.forEach((input, index) => {\r\n    input.value = dataArray[index].textContent;\r\n  });\r\n}\r\n\r\nPromise.all([getUserDataApi(), getCardsApi()])\r\n  .then(([userData, initialCards]) => {\r\n    profileTitle.textContent = userData.name;\r\n    profileDescription.textContent = userData.about;\r\n    profileAvatar.style.backgroundImage = `url(${userData.avatar})`;\r\n    currentUserId = userData._id;\r\n\r\n    initialCards.forEach((card) => {\r\n      const cardData = {\r\n        id: card._id,\r\n        ownerId: card.owner._id,\r\n        userId: currentUserId,\r\n        name: card.name,\r\n        link: card.link,\r\n        likes: card.likes,\r\n      };\r\n      const newCard = createCard({\r\n        cardData,\r\n        onDelete: confirmDelete,\r\n        onLike: likeCard,\r\n        onImageClick: openCardModal,\r\n      });\r\n      cardsContainer.append(newCard);\r\n    });\r\n  })\r\n  .catch((err) => console.log(err));\r\n\r\nfunction confirmDelete(cardElement, cardId) {\r\n  openModal(deleteModal);\r\n  cardElement.setAttribute(\"id\", \"card_\" + Date.now());\r\n  deleteForm.dataset.cardId = cardId;\r\n  deleteForm.dataset.cardElementId = cardElement.id;\r\n}\r\n\r\nfunction handleDeleteCard(e) {\r\n  e.preventDefault();\r\n  renderLoading(true, deleteForm);\r\n  const cardId = deleteForm.dataset.cardId;\r\n  const cardElement = document.getElementById(deleteForm.dataset.cardElementId);\r\n  deleteCard(cardElement, cardId);\r\n}\r\n\r\nprofileEditButton.addEventListener(\"click\", () => {\r\n  fillForm([nameInput, descriptionInput], [profileTitle, profileDescription]);\r\n  clearValidation(profileEditModal, validationConfig);\r\n  openModal(profileEditModal);\r\n});\r\n\r\nfunction handleEditUserData(e) {\r\n  e.preventDefault();\r\n  renderLoading(true, profileEditForm);\r\n  const name = nameInput.value;\r\n  const description = descriptionInput.value;\r\n\r\n  editUserDataApi(name, description)\r\n    .then((userData) => {\r\n      profileTitle.textContent = userData.name;\r\n      profileDescription.textContent = userData.about;\r\n      closeModal(profileEditModal);\r\n    })\r\n    .catch((err) => console.log(err))\r\n    .finally(() => {\r\n      renderLoading(false, profileEditForm);\r\n    });\r\n}\r\n\r\nprofileAddButton.addEventListener(\"click\", () => {\r\n  clearValidation(profileAddModal, validationConfig);\r\n  openModal(profileAddModal);\r\n});\r\n\r\nfunction handleAddCard(e) {\r\n  e.preventDefault();\r\n  renderLoading(true, profileAddForm);\r\n\r\n  const name = titleInput.value;\r\n  const link = urlInput.value;\r\n\r\n  addNewCardApi(name, link)\r\n    .then((card) => {\r\n      const cardData = {\r\n        id: card._id,\r\n        ownerId: card.owner._id,\r\n        userId: currentUserId,\r\n        name: card.name,\r\n        link: card.link,\r\n        likes: card.likes,\r\n      };\r\n      const newCard = createCard({\r\n        cardData,\r\n        onDelete: confirmDelete,\r\n        onLike: likeCard,\r\n        onImageClick: openCardModal,\r\n      });\r\n      cardsContainer.prepend(newCard);\r\n      profileAddForm.reset();\r\n      closeModal(profileAddModal);\r\n    })\r\n    .catch((err) => console.log(err))\r\n    .finally(() => {\r\n      renderLoading(false, profileAddForm);\r\n    });\r\n}\r\n\r\nfunction deleteCard(cardElement, cardId) {\r\n  deleteCardApi(cardId)\r\n    .then(() => {\r\n      cardElement.remove();\r\n      closeModal(deleteModal);\r\n    })\r\n    .catch((err) => {\r\n      console.log(`Ошибка при удалении карточки: ${err}`);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, deleteForm);\r\n    });\r\n}\r\n\r\nfunction likeCard(likeButton, cardId, likesCount) {\r\n  const isLiked = likeButton.classList.contains(\"card__like-button_is-active\");\r\n\r\n  setLikeApi(cardId, isLiked)\r\n    .then((updatedCard) => {\r\n      likeButton.classList.toggle(\"card__like-button_is-active\");\r\n      likesCount.textContent = updatedCard.likes.length;\r\n    })\r\n    .catch((err) => console.log(err));\r\n}\r\n\r\nprofileAvatar.addEventListener(\"click\", () => {\r\n  clearValidation(avatarEditModal, validationConfig);\r\n  openModal(avatarEditModal);\r\n});\r\n\r\nfunction handleEditAvatar(e) {\r\n  e.preventDefault();\r\n  renderLoading(true, avatarEditForm);\r\n  const avatarUrl = avatarEditInput.value;\r\n  updateAvatarApi(avatarUrl)\r\n    .then((data) => {\r\n      profileAvatar.style.backgroundImage = `url(${data.avatar})`;\r\n      avatarEditForm.reset();\r\n      closeModal(avatarEditModal);\r\n    })\r\n    .catch((err) => console.log(err))\r\n    .finally(() => {\r\n      renderLoading(false, avatarEditForm);\r\n    });\r\n}\r\n\r\nmodalArray.forEach((modal) => {\r\n  modal.addEventListener(\"mousedown\", (e) => {\r\n    if (e.target === modal || e.target.classList.contains(\"popup__close\")) {\r\n      closeModal(modal);\r\n    }\r\n  });\r\n});\r\n\r\nfunction openCardModal(img, title, modal = document.querySelector(\".popup_type_image\")) {\r\n  modal.querySelector(\".popup__image\").src = img.src;\r\n  modal.querySelector(\".popup__image\").alt = img.alt;\r\n  modal.querySelector(\".popup__caption\").textContent = title.textContent;\r\n  openModal(modal);\r\n}\r\n\r\nfunction renderLoading(isLoading, formElement) {\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  if (isLoading) {\r\n    buttonElement.setAttribute(\"data-text\", buttonElement.textContent);\r\n    buttonElement.textContent = \"Сохранение...\";\r\n  } else {\r\n    buttonElement.textContent = buttonElement.getAttribute(\"data-text\");\r\n    buttonElement.removeAttribute(\"data-text\");\r\n  }\r\n}\r\n\r\nprofileAddForm.addEventListener(\"submit\", handleAddCard);\r\nprofileEditForm.addEventListener(\"submit\", handleEditUserData);\r\navatarEditForm.addEventListener(\"submit\", handleEditAvatar);\r\ndeleteForm.addEventListener(\"submit\", handleDeleteCard);\r\n\r\nenableValidation(validationConfig);\r\n"],"names":["openModal","modal","classList","add","document","addEventListener","handleEscClose","closeModal","remove","removeEventListener","e","key","querySelector","cardTemplate","content","createCard","_ref","cardData","onDelete","onLike","onImageClick","cardElement","cloneNode","cardImage","cardTitle","deleteButton","likeButton","likesCount","src","link","alt","name","textContent","likes","length","id","some","like","_id","userId","ownerId","hideInputError","formElement","inputElement","validationConfig","errorElement","concat","inputErrorClass","errorClass","toggleButtonState","fieldset","inputList","Array","from","querySelectorAll","inputSelector","buttonElement","submitButtonSelector","validity","valid","hasInvalidInput","inactiveButtonClass","disabled","clearValidation","forEach","setCustomValidity","config","baseUrl","headers","authorization","getResponse","res","ok","json","Promise","reject","status","cardsContainer","profileEditButton","deleteModal","deleteForm","forms","profileAddButton","profileAddModal","profileTitle","profileDescription","profileEditModal","profileEditForm","profileAddForm","nameInput","descriptionInput","titleInput","urlInput","modalArray","avatarEditModal","avatarEditInput","avatarEditForm","profileAvatar","currentUserId","formSelector","confirmDelete","cardId","setAttribute","Date","now","dataset","cardElementId","likeCard","isLiked","method","fetch","then","setLikeApi","contains","updatedCard","toggle","catch","err","console","log","openCardModal","img","title","arguments","undefined","renderLoading","isLoading","getAttribute","removeAttribute","all","_ref2","userData","initialCards","about","style","backgroundImage","avatar","card","newCard","owner","append","dataArray","input","index","value","target","preventDefault","body","JSON","stringify","prepend","reset","finally","data","deleteCardApi","deleteCard","getElementById","evt","fieldSet","patternMismatch","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation"],"sourceRoot":""}