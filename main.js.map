{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["export function openModal(modal) {\r\n  modal.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", handleEscClose);\r\n}\r\n\r\nexport function closeModal(modal) {\r\n  modal.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", handleEscClose);\r\n}\r\n\r\nfunction handleEscClose(e) {\r\n  if (e.key === \"Escape\") {\r\n    const modal = document.querySelector(\".popup_is-opened\");\r\n    if (modal) {\r\n      closeModal(modal);\r\n    }\r\n  }\r\n}","const config = {\r\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-41\",\r\n  headers: {\r\n    authorization: \"143f916c-f045-4e3b-8db8-22feba489e0e\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nexport const getUserDataApi = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n};\r\n\r\nexport const getCardsApi = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n};\r\n\r\nconst getResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка ${res.status}`);\r\n};\r\n\r\nexport const editUserDataApi = (name, about) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({ name, about }),\r\n  }).then(getResponse);\r\n};\r\n\r\nexport const updateAvatarApi = (avatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({ avatar }),\r\n  }).then(getResponse);\r\n};\r\n\r\nexport const addNewCardApi = (name, link) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({ name, link }),\r\n  }).then(getResponse);\r\n};\r\n\r\nexport const setLikeApi = (cardId, isLiked) => {\r\n  const method = isLiked ? \"DELETE\" : \"PUT\";\r\n\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method,\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n};\r\n\r\nexport const deleteCardApi = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n};\r\n","import { setLikeApi } from \"./api\";\r\n\r\nconst cardTemplate = document.querySelector(\"#card-template\").content;\r\n\r\nfunction createCard({ cardData, onDelete, onLike, onImageClick }) {\r\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\r\n  const cardImage = cardElement.querySelector(\".card__image\");\r\n  const cardTitle = cardElement.querySelector(\".card__title\");\r\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\r\n  const likeButton = cardElement.querySelector(\".card__like-button\");\r\n\r\n  const likesCount = cardElement.querySelector(\".card__like-count\");\r\n\r\n  cardImage.src = cardData.link;\r\n  cardImage.alt = cardData.name;\r\n  cardTitle.textContent = cardData.name;\r\n  likesCount.textContent = cardData.likes.length;\r\n\r\n  likeButton.addEventListener(\"click\", () => onLike(likeButton, cardData.id, likesCount));\r\n  cardImage.addEventListener(\"click\", () => onImageClick(cardImage, cardTitle));\r\n\r\n  const userHasLike = cardData.likes.some((like) => {\r\n    return like._id === cardData.userId;\r\n  });\r\n\r\n  if (userHasLike) {\r\n    likeButton.classList.add(\"card__like-button_is-active\");\r\n  }\r\n\r\n  if (cardData.ownerId !== cardData.userId) {\r\n    deleteButton.remove();\r\n  } else {\r\n    deleteButton.addEventListener(\"click\", () => onDelete(cardElement, cardData.id));\r\n  }\r\n  return cardElement;\r\n}\r\n\r\nfunction likeCard(likeButton, cardId, likesCount) {\r\n  const isLiked = likeButton.classList.contains(\"card__like-button_is-active\");\r\n\r\n  setLikeApi(cardId, isLiked)\r\n    .then((updatedCard) => {\r\n      likeButton.classList.toggle(\"card__like-button_is-active\");\r\n      likesCount.textContent = updatedCard.likes.length;\r\n    })\r\n    .catch((err) => console.log(err));\r\n}\r\n\r\nexport { createCard, likeCard };\r\n","export { clearValidation, enableValidation };\r\n\r\nconst showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = \"\";\r\n};\r\n\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n};\r\n\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  toggleButtonState(formElement, validationConfig);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", function (e) {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      toggleButtonState(formElement, validationConfig);\r\n    });\r\n  });\r\n};\r\n\r\nconst enableValidation = (validationConfig) => {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener(\"submit\", function (evt) {\r\n      evt.preventDefault();\r\n    });\r\n    const fieldsetList = Array.from(formElement.querySelectorAll(\".popup__form_set\"));\r\n    fieldsetList.forEach((fieldSet) => {\r\n      setEventListeners(fieldSet, validationConfig);\r\n    });\r\n  });\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\nconst toggleButtonState = (fieldset, validationConfig) => {\r\n  const inputList = Array.from(fieldset.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = fieldset.querySelector(validationConfig.submitButtonSelector);\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n    buttonElement.disabled = true;\r\n  } else {\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n    buttonElement.disabled = false;\r\n  }\r\n};\r\n\r\nconst clearValidation = (modal, validationConfig) => {\r\n  const fieldset = modal.querySelector(\".popup__form_set\");\r\n  const inputList = Array.from(modal.querySelectorAll(validationConfig.inputSelector));\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(fieldset, inputElement, validationConfig);\r\n    inputElement.setCustomValidity(\"\");\r\n  });\r\n  toggleButtonState(fieldset, validationConfig);\r\n};\r\n","import \"./pages/index.css\";\r\n\r\nimport { openModal, closeModal } from \"./components/modal\";\r\nimport { createCard, likeCard } from \"./components/card\";\r\nimport { clearValidation, enableValidation } from \"./components/validation\";\r\nimport {\r\n  getUserDataApi,\r\n  updateAvatarApi,\r\n  addNewCardApi,\r\n  getCardsApi,\r\n  editUserDataApi,\r\n  deleteCardApi,\r\n} from \"./components/api\";\r\n\r\nconst container = document.querySelector(\".content\");\r\nconst cardsContainer = container.querySelector(\".places__list\");\r\nconst profileEditButton = document.querySelector(\".profile__edit-button\");\r\n\r\nconst deleteModal = document.querySelector(\".popup_type_delete\");\r\nconst deleteForm = document.forms[\"confirm-delete-card\"];\r\n\r\nconst profileAddButton = document.querySelector(\".profile__add-button\");\r\nconst profileAddModal = document.querySelector(\".popup_type_new-card\");\r\nconst profileTitle = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\nconst profileEditModal = document.querySelector(\".popup_type_edit\");\r\nconst profileEditForm = document.forms[\"edit-profile\"];\r\nconst profileAddForm = document.forms[\"new-place\"];\r\nconst nameInput = profileEditForm.querySelector(\".popup__input_type_name\");\r\nconst descriptionInput = profileEditForm.querySelector(\".popup__input_type_description\");\r\nconst titleInput = profileAddForm.querySelector(\".popup__input_type_card-name\");\r\nconst urlInput = profileAddForm.querySelector(\".popup__input_type_url\");\r\nconst modalArray = document.querySelectorAll(\".popup\");\r\n\r\nconst avatarEditModal = document.querySelector(\".popup_type_avatar\");\r\nconst avatarEditInput = avatarEditModal.querySelector(\".popup__input_type_avatar\");\r\nconst avatarEditForm = document.forms[\"edit-avatar\"];\r\nconst profileAvatar = document.querySelector(\".profile__image\");\r\nlet currentUserId = null;\r\n\r\nconst validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n\r\nfunction fillForm(inputsArray, dataArray) {\r\n  inputsArray.forEach((input, index) => {\r\n    input.value = dataArray[index].textContent;\r\n  });\r\n}\r\n\r\nPromise.all([getUserDataApi(), getCardsApi()])\r\n  .then(([userData, initialCards]) => {\r\n    profileTitle.textContent = userData.name;\r\n    profileDescription.textContent = userData.about;\r\n    profileAvatar.style.backgroundImage = `url(${userData.avatar})`;\r\n    currentUserId = userData._id;\r\n\r\n    initialCards.forEach((card) => {\r\n      const cardData = {\r\n        id: card._id,\r\n        ownerId: card.owner._id,\r\n        userId: currentUserId,\r\n        name: card.name,\r\n        link: card.link,\r\n        likes: card.likes,\r\n      };\r\n      const newCard = createCard({\r\n        cardData,\r\n        onDelete: confirmDelete,\r\n        onLike: likeCard,\r\n        onImageClick: openCardModal,\r\n      });\r\n      cardsContainer.append(newCard);\r\n    });\r\n  })\r\n  .catch((err) => console.log(err));\r\n\r\nfunction confirmDelete(cardElement, cardId) {\r\n  openModal(deleteModal);\r\n  cardElement.setAttribute(\"id\", \"card_\" + Date.now());\r\n  deleteForm.dataset.cardId = cardId;\r\n  deleteForm.dataset.cardElementId = cardElement.id;\r\n}\r\n\r\nfunction handleDeleteCard(e) {\r\n  e.preventDefault();\r\n  renderLoading(true, deleteForm);\r\n  const cardId = deleteForm.dataset.cardId;\r\n  const cardElement = document.getElementById(deleteForm.dataset.cardElementId);\r\n  deleteCard(cardElement, cardId);\r\n}\r\n\r\nprofileEditButton.addEventListener(\"click\", () => {\r\n  fillForm([nameInput, descriptionInput], [profileTitle, profileDescription]);\r\n  clearValidation(profileEditModal, validationConfig);\r\n  openModal(profileEditModal);\r\n});\r\n\r\nfunction handleEditUserData(e) {\r\n  e.preventDefault();\r\n  renderLoading(true, profileEditForm);\r\n  const name = nameInput.value;\r\n  const description = descriptionInput.value;\r\n\r\n  editUserDataApi(name, description)\r\n    .then((userData) => {\r\n      profileTitle.textContent = userData.name;\r\n      profileDescription.textContent = userData.about;\r\n      closeModal(profileEditModal);\r\n    })\r\n    .catch((err) => console.log(err))\r\n    .finally(() => {\r\n      renderLoading(false, profileEditForm);\r\n    });\r\n}\r\n\r\nprofileAddButton.addEventListener(\"click\", () => {\r\n  clearValidation(profileAddModal, validationConfig);\r\n  openModal(profileAddModal);\r\n});\r\n\r\nfunction handleAddCard(e) {\r\n  e.preventDefault();\r\n  renderLoading(true, profileAddForm);\r\n\r\n  const name = titleInput.value;\r\n  const link = urlInput.value;\r\n\r\n  addNewCardApi(name, link)\r\n    .then((card) => {\r\n      const cardData = {\r\n        id: card._id,\r\n        ownerId: card.owner._id,\r\n        userId: currentUserId,\r\n        name: card.name,\r\n        link: card.link,\r\n        likes: card.likes,\r\n      };\r\n      const newCard = createCard({\r\n        cardData,\r\n        onDelete: confirmDelete,\r\n        onLike: likeCard,\r\n        onImageClick: openCardModal,\r\n      });\r\n      cardsContainer.prepend(newCard);\r\n      profileAddForm.reset();\r\n      closeModal(profileAddModal);\r\n    })\r\n    .catch((err) => console.log(err))\r\n    .finally(() => {\r\n      renderLoading(false, profileAddForm);\r\n    });\r\n}\r\n\r\nfunction deleteCard(cardElement, cardId) {\r\n  deleteCardApi(cardId)\r\n    .then(() => {\r\n      cardElement.remove();\r\n      closeModal(deleteModal);\r\n    })\r\n    .catch((err) => {\r\n      console.log(`Ошибка при удалении карточки: ${err}`);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, deleteForm);\r\n    });\r\n}\r\n\r\nprofileAvatar.addEventListener(\"click\", () => {\r\n  clearValidation(avatarEditModal, validationConfig);\r\n  openModal(avatarEditModal);\r\n});\r\n\r\nfunction handleEditAvatar(e) {\r\n  e.preventDefault();\r\n  renderLoading(true, avatarEditForm);\r\n  const avatarUrl = avatarEditInput.value;\r\n  updateAvatarApi(avatarUrl)\r\n    .then((data) => {\r\n      profileAvatar.style.backgroundImage = `url(${data.avatar})`;\r\n      avatarEditForm.reset();\r\n      closeModal(avatarEditModal);\r\n    })\r\n    .catch((err) => console.log(err))\r\n    .finally(() => {\r\n      renderLoading(false, avatarEditForm);\r\n    });\r\n}\r\n\r\nmodalArray.forEach((modal) => {\r\n  modal.addEventListener(\"mousedown\", (e) => {\r\n    if (e.target === modal || e.target.classList.contains(\"popup__close\")) {\r\n      closeModal(modal);\r\n    }\r\n  });\r\n});\r\n\r\nfunction openCardModal(img, title, modal = document.querySelector(\".popup_type_image\")) {\r\n  modal.querySelector(\".popup__image\").src = img.src;\r\n  modal.querySelector(\".popup__image\").alt = img.alt;\r\n  modal.querySelector(\".popup__caption\").textContent = title.textContent;\r\n  openModal(modal);\r\n}\r\n\r\nfunction renderLoading(isLoading, formElement) {\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  if (isLoading) {\r\n    buttonElement.setAttribute(\"data-text\", buttonElement.textContent);\r\n    buttonElement.textContent = \"Сохранение...\";\r\n  } else {\r\n    buttonElement.textContent = buttonElement.getAttribute(\"data-text\");\r\n    buttonElement.removeAttribute(\"data-text\");\r\n  }\r\n}\r\n\r\nprofileAddForm.addEventListener(\"submit\", handleAddCard);\r\nprofileEditForm.addEventListener(\"submit\", handleEditUserData);\r\navatarEditForm.addEventListener(\"submit\", handleEditAvatar);\r\ndeleteForm.addEventListener(\"submit\", handleDeleteCard);\r\n\r\nenableValidation(validationConfig);\r\n"],"names":["openModal","modal","classList","add","document","addEventListener","handleEscClose","closeModal","remove","removeEventListener","e","key","querySelector","config","baseUrl","headers","authorization","getResponse","res","ok","json","Promise","reject","concat","status","cardTemplate","content","createCard","_ref","cardData","onDelete","onLike","onImageClick","cardElement","cloneNode","cardImage","cardTitle","deleteButton","likeButton","likesCount","src","link","alt","name","textContent","likes","length","id","some","like","_id","userId","ownerId","likeCard","cardId","isLiked","method","fetch","then","setLikeApi","contains","updatedCard","toggle","catch","err","console","log","hideInputError","formElement","inputElement","validationConfig","errorElement","inputErrorClass","errorClass","toggleButtonState","fieldset","inputList","Array","from","querySelectorAll","inputSelector","buttonElement","submitButtonSelector","validity","valid","hasInvalidInput","inactiveButtonClass","disabled","clearValidation","forEach","setCustomValidity","cardsContainer","profileEditButton","deleteModal","deleteForm","forms","profileAddButton","profileAddModal","profileTitle","profileDescription","profileEditModal","profileEditForm","profileAddForm","nameInput","descriptionInput","titleInput","urlInput","modalArray","avatarEditModal","avatarEditInput","avatarEditForm","profileAvatar","currentUserId","formSelector","confirmDelete","setAttribute","Date","now","dataset","cardElementId","openCardModal","img","title","arguments","undefined","renderLoading","isLoading","getAttribute","removeAttribute","all","_ref2","userData","initialCards","about","style","backgroundImage","avatar","card","newCard","owner","append","dataArray","input","index","value","target","preventDefault","body","JSON","stringify","prepend","reset","finally","data","deleteCardApi","deleteCard","getElementById","evt","fieldSet","patternMismatch","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation"],"sourceRoot":""}